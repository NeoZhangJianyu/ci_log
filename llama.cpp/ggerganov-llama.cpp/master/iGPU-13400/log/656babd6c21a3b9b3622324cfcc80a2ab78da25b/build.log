 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="--config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
The oneAPI toolkits no longer support 32-bit libraries, starting with the 2025.0 toolkit release. See the oneAPI release notes for more details.
  
-- The C compiler identification is IntelLLVM 2025.0.4
-- The CXX compiler identification is IntelLLVM 2025.0.4
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /opt/intel/oneapi/compiler/2025.0/bin/icx - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /opt/intel/oneapi/compiler/2025.0/bin/icpx - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found Git: /usr/bin/git (found version "2.43.0") 
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE  
-- Warning: ccache not found - consider installing it for faster compilation or disable this warning with GGML_CCACHE=OFF
-- CMAKE_SYSTEM_PROCESSOR: x86_64
-- Including CPU backend
-- Found OpenMP_C: -fiopenmp (found version "5.1") 
-- Found OpenMP_CXX: -fiopenmp (found version "5.1") 
-- Found OpenMP: TRUE (found version "5.1")  
-- x86 detected
-- Adding CPU backend variant ggml-cpu: -march=native 
-- GGML_SYCL_TARGET=INTEL
-- Performing Test SUPPORTS_SYCL
-- Performing Test SUPPORTS_SYCL - Success
-- Using oneAPI Release SYCL compiler (icpx).
-- SYCL found
-- Found IntelSYCL: /opt/intel/oneapi/compiler/2025.0/include (found version "202001") 
-- Found oneDNN: /opt/intel/oneapi/dnnl/2025.0/lib/libdnnl.so.3.6
-- MKL_VERSION: 2025.0.1
-- MKL_ROOT: /opt/intel/oneapi/mkl/2025.0
-- MKL_ARCH: intel64
-- MKL_SYCL_LINK: None, set to ` dynamic` by default
-- MKL_LINK: None, set to ` dynamic` by default
-- MKL_SYCL_INTERFACE_FULL: None, set to ` intel_ilp64` by default
-- MKL_INTERFACE_FULL: None, set to ` intel_ilp64` by default
-- MKL_SYCL_THREADING: None, set to ` tbb_thread` by default
-- MKL_THREADING: None, set to ` intel_thread` by default
-- MKL_MPI: None, set to ` intelmpi` by default
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_scalapack_ilp64.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_cdft_core.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_intel_ilp64.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_intel_thread.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_core.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_blacs_intelmpi_ilp64.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_sycl_blas.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_sycl_lapack.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_sycl_dft.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_sycl_sparse.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_sycl_data_fitting.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_sycl_rng.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_sycl_stats.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_sycl_vm.so
-- Found /opt/intel/oneapi/mkl/2025.0/lib/libmkl_tbb_thread.so
-- Found /opt/intel/oneapi/compiler/2025.0/lib/libiomp5.so
-- Including SYCL backend
-- Could NOT find CURL (missing: CURL_LIBRARY CURL_INCLUDE_DIR) 
CMake Error at common/CMakeLists.txt:90 (message):
  Could NOT find CURL.  Hint: to disable this feature, set -DLLAMA_CURL=OFF


-- Configuring incomplete, errors occurred!
Change Dir: '/home/zjy/ws/jenkins/workspace/ci-13400/ggerganov-llama.cpp/build'

Run Build Command(s): /usr/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile -j
gmake: Makefile: No such file or directory
gmake: *** No rule to make target 'Makefile'.  Stop.

